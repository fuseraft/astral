##
Summary: A module for connecting to databases with ODBC to execute queries.
##
module odbc
  __home__("kiwi")

  ##
  Summary: Begin a transaction.
  Params:
    - @_connection: A hash containing a `connection_string` property.
  Returns: A hash containing an ODBC response.
  ##
  def begin_transaction(@_connection)
    return __odbc_begin_tx__(@_connection)
  end

  ##
  Summary: Commit a transaction.
  Params:
    - @_connection: A hash containing a `connection_string` property.
  Returns: A hash containing an ODBC response.
  ##
  def commit(@_connection)
    return __odbc_commit_tx__(@_connection)
  end

  ##
  Summary: Connect to a database.
  Params:
    - @_connection: A hash containing a `connection_string` property.
  Returns: A hash containing an ODBC response.
  ##
  def connect(@_connection)
    return __odbc_connect__(@_connection)
  end

  ##
  Summary: Executes a SQL query.
  Params:
    - @_connection: A hash containing a `connection_string` property.
    - @_sql: The SQL to execute.
  Returns: A hash containing an ODBC response.
  ##
  def exec_sql(@_connection, @_sql)
    return __odbc_exec__(@_connection, @_sql)
  end

  ##
  Summary: Executes a SQL stored procedure.
  Params:
    - @_connection: A hash containing a `connection_string` property.
    - @_sp: A string containing the SQL stored procedure name to execute.
    - @_params: A list of parameter values.
  Returns: A hash containing an ODBC response.
  ##
  def exec_sp(@_connection, @_sp, @_params)
    return __odbc_execsp__(@_connection, @_sp, @_params)
  end

  ##
  Summary: Check if in a transaction.
  Params:
    - @_connection: A hash containing a `connection_string` property.
  Returns: A hash containing an ODBC response.
  ##
  def in_transaction(@_connection)
    return __odbc_in_tx__(@_connection)
  end

  ##
  Summary: Check if a connection is active.
  Params:
    - @_connection: A hash containing a `connection_string` property.
  Returns: A hash containing an ODBC response.
  ##
  def is_connected(@_connection)
    return __odbc_isconnected__(@_connection)
  end

  ##
  Summary: Rollback a transaction.
  Params:
    - @_connection: A hash containing a `connection_string` property.
  Returns: A hash containing an ODBC response.
  ##
  def rollback(@_connection)
    return __odbc_rollback_tx__(@_connection)
  end
end

import "odbc"