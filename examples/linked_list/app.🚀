import "home"   # import homed modules
import "tester" # import Tester class

def main()
  import "@examples/linkedlist" as ll

  test = Tester.new()
  
  list = ll.create()
  test.same(list, {"head": {}})
  
  ll.insert_first(list, 3)
  test.same(list, {"head": {"data": 3, "next_node": {}}})
  
  ll.insert_first(list, 2)
  test.same(list, {"head": {"data": 2, "next_node": {"data": 3, "next_node": {}}}})
  
  ll.insert_first(list, 1)
  test.same(list, {"head": {"data": 1, "next_node": {"data": 2, "next_node": {"data": 3, "next_node": {}}}}})
  
  ll.insert_last(list, 4)
  test.same(list, {"head": {"data": 1, "next_node": {"data": 2, "next_node": {"data": 3, "next_node": {"data": 4, "next_node": {}}}}}})
  
  ll.remove_last(list)
  test.same(list, {"head": {"data": 1, "next_node": {"data": 2, "next_node": {"data": 3, "next_node": {}}}}})
  
  ll.remove_first(list)
  test.same(list, {"head": {"data": 2, "next_node": {"data": 3, "next_node": {}}}})
  
  ll.insert_at(list, "hello", 0)
  test.same(list, {"head": {"data": "hello", "next_node": {"data": 2, "next_node": {"data": 3, "next_node": {}}}}})
  
  ll.insert_last(list, "world")
  test.same(list, {"head": {"data": "hello", "next_node": {"data": 2, "next_node": {"data": 3, "next_node": {"data": "world", "next_node": {}}}}}})
  
  ll.remove_at(list, 1)
  test.same(list, {"head": {"data": "hello", "next_node": {"data": 3, "next_node": {"data": "world", "next_node": {}}}}})
  
  ll.remove_at(list, 1)
  test.same(list, {"head": {"data": "hello", "next_node": {"data": "world", "next_node": {}}}})
  
  values = ll.get_values(list).join(" ")
  test.same(values, "hello world")
  
  ll.clear(list)
  test.same(list, {"head": {}})
  
  println test.results() # prints: {"same": {"passed": 13, "failed": 0}}
end

main()