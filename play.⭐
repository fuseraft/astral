#!/usr/bin/astral
/# This ⭐ script is for experimentation. #/

import "@astral/string"

def main()
  size = get_integer("How wide should the addition table be (enter a non-zero integer size): ")
  grid = get_grid(size)

  print_grid(grid, "A ${size}x${size} addition table.")

  num1 = get_integer("Enter the first integer: ")
  num2 = get_integer("Enter the second integer: ")

  if [num1, num2].max() > size || [num1, num2].min() < 0
    println("The input is outside the bounds of the addition table.")
    exit(0)
  end

  println("Result: ${compute(grid, num1, num2)}")
end

def get_integer(message, default_value = 0)
  limit = default_value

  while limit == default_value do
    tmp = input(message)
    tmp = tmp.trim()
    if string::isnumeric(tmp)
      tmp = tmp.to_int()
      limit = tmp
    else
      println("`${tmp}` is not an integer value...")
    end
  end

  return limit
end

def get_grid(limit)
  grid = ([[0] * limit] * limit)
  grid.each(with (v, r) do
    (v).each(with (vv, c) do
      grid[r][c] = (c + r)
    end)
  end)
  return grid
end

def print_grid(grid, label = "")
  println(label)
  grid.each(with (v, r) do
    v.each(with (c) do
      print(string::padstart("${c}", 4, " "))
    end)
    println("")
  end)
end

def compute(grid, x = 0, y = 0)
  return grid[x][y]
end

main()