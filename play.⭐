#!/usr/bin/astral
/# This ‚≠ê script is for experimentation. #/

abstract class X
  abstract def run(x)
end

class A < X
  def initialize() end
  override def run(x) println("A: ${x}") end
end

class B < X
  def initialize() end
  override def run(x) println("B: ${x}") end
end

class C < X
  def initialize() end
  override def run(x) println("C: ${x}") end
end

class D
  def initialize() end
  def run(x) println("D: ${x}") end
end

[A.new(), B.new(), C.new(), D.new()].each(with (o) do
  if o.is_a(A)
    o.run("I am an A")
  elsif o.is_a(C) || o.is_a(B)
    o.run("I am a C, or a B.")
  elsif o.is_a(X)
    o.run("I am an X")
  else
    o.run("I am something else.")
  end
end)

/# Output:
A: I am an A
B: I am a C, or a B.
C: I am a C, or a B.
D: I am something else.
#/