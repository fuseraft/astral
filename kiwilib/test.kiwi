import "fileio"
import "time"

@path = "hello.txt"

# =============================
# Create the file
# =============================

println "=> creating file: ${@path}"
fileio::create(@path)

# =============================
# Check if the file exists
# =============================

if fileio::exists(@path)
  println "=> created file: ${@path}"
end

# =============================
# Write text to file
# =============================

println "=> writing text to file: ${@path}"
fileio::write(@path, "")
fileio::writeln(@path, "Hello, World!")
fileio::append(@path, "This is Kiwi!")

# =============================
# Read text from file
# =============================

println "=> reading text from file: ${@path}"
@text = fileio::read(@path)
println "=> file text:\n${@text}"

# =============================
# Copy the file
# =============================

@dest = "hello-copy.txt"
println "=> copying file: ${@path}"
println "=> copying to: ${@dest}"
@text = fileio::copy(@path, @dest)

# =============================
# Read text from copied file
# =============================

println "=> reading text from file: ${@dest}"
@text = fileio::read(@dest)
println "=> file text:\n${@text}"

# =============================
# Delete copied file
# =============================

println "=> deleting file: ${@dest}"
fileio::delete(@dest)

# =============================
# Read file size of file
# =============================

println "=> getting file size: ${@path}"
@size = fileio::filesize(@path)
println "=> file size: ${@size} bytes"

# =============================
# Get the absolute path
# =============================

@abspath = fileio::abspath(@path)
println "=> absolute path: ${@abspath}"

# =============================
# Get the parent directory
# =============================

@parent = fileio::parentdir(@abspath)
println "=> parent directory: ${@parent}"

# =============================
# Get the filename
# =============================

@name = fileio::filename(@abspath)
println "=> file name: ${@name}"

# =============================
# Get the file extension
# =============================

@ext = fileio::getext(@path)
println "=> file extension: ${@ext}"

# =============================
# Move/Rename the file
# =============================

@dest = "hello-moved.txt"
println "=> moving file: ${@path}"
println "=> moving to: ${@dest}"
fileio::move(@path, @dest)

@path = @dest

# =============================
# Delete the file if it exists
# =============================

if fileio::exists(@path)
  println "=> deleting file: ${@path}"
  fileio::delete(@path)
end

# =============================
# Check if the file exists
# =============================

if !fileio::exists(@path)
  println "=> deleted file: ${@path}"
end

@path = "file.txt"
println "creating file: ${@path}"
fileio::create(@path)
@i = 1

println "writing to file: ${@path}"
while @i <= 10 do
  fileio::writeln(@path, "Item ${@i}")
  @i += 1
end

println "reading lines from: ${@path}"
@lines = fileio::readlines(@path)
for @line, @index in @lines do
  println "${@index}: ${@line}"
end

if fileio::exists(@path)
  fileio::delete(@path)
end

if !fileio::exists(@path)
  println "deleted file: ${@path}"
end

# Time tests

@year = time::year()
@month = time::month()
@day = time::day()
@hour = time::hour()
@minute = time::minute()
@second = time::second()
@ampm = time::ampm()

if @hour > 12 @hour -= 12 end
if @minute < 10 @minute = "0${@minute}" end
if @day < 10 @day = "0${@day}" end
if @month < 10 @month = "0${@month}" end

println "Current timestamp: ${@year}/${@month}/${@day} ${@hour}:${@minute}:${@second} ${@ampm}"