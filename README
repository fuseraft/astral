Title:	USL (Unorthodox Scripting Language)
By:	scstauf@gmail.com 
Date:	23 August 2013

Copyright 2013 Scott Christopher Stauffer

[Reasoning and Synopsis]:

USL is a programmable object-oriented scripting language designed out of boredom by yours truly.

USL began as a command shell on a slackware desktop before I added the ability to script code. At the time I had no idea how languages worked (and still don't to an extent), so I had to write it by scratch. I used the interface I had already designed as a way to take in commands and have USL act a certain way based on the commands it read. This gave me an interactive interpreter out of the box and a way to test the functionality on the fly. By that time, there were already file i/o commands programmed into USL like "fpush/pop" and one output command called "say". I ported it to compile on Windows and that's when I decided to release it into the wild.

USL is not intended to replace any other languages.
	
USL is just a hobby of mine. It's fun to play with. If you'd like to join in on the fun, contact me!

[How-To Use]:

Without a script provided, USL starts as a regular command shell.
	
> say "Hello, World!"
	
The shell itself is an interactive interpreter and we don't need to start the shell in order to execute commands.
	
$ usl -p "say 'Hello, World!'"
	
You can save your code to a *.us (unorthodox script) file, and let USL interpret it. Or write all of your code on-the-fly (usually in a sandbox environment to test some code).
	
Handling Bugs:

I supply an error message when one occurs and it can be logged when you supply the --log switch.
	
$ usl -l logfile.txt
	
Or you can just copy and paste the error and send it (with a copy of
the script file attached to my email address (at the top).

(scottyeatscode.blogspot.com)