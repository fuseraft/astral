#!/usr/bin/astral
/# This ðŸš€ script is for experimentation. #/

import "@astral/log" as log
log.logformat("[%timestamp] %message")

name = "Astral"
log.info("Initial assignment: ${name}")

class ScopeCheck private (name)
  def initialize(name)
    log.info("Ctor parameter:     ${name}")
    this.name = name
    log.info("Instance variable:  ${this.name}")
  end

  def get_name()
    return this.name
  end
end

objects = []

for name in ["Zephyr", "Aetheris", "Kiwi"] do # `name` should be temporary. We need to not affect the `name` outside. 
  objects << ScopeCheck.new(name) 
end

log.info("Post instantiation: ${name}")

for o in objects do
  log.info("Instance method:    ${o.get_name()}")
end
