# Script Performance Analyzer

import "@kiwi/fileio"
import "@kiwi/time"

@runtimes = []

# Search pattern for Kiwi scripts, excluding certain files and directories
@search_pattern = "./**/*.ü•ù"
@exclusions = ["install.ü•ù", "test.ü•ù", "/kiwilib/", "/examples/"]

println "Searching for Kiwi scripts..."
for @file in fileio::glob(@search_pattern) do
  # Check if file is not in the exclusions list
  @exclude = false
  for @exclude_pattern in @exclusions do
    if @file.contains(@exclude_pattern)
      @exclude = true
      break
    end
  end
  
  if !@exclude
    println "Found script: ${@file}"
    @dir = fileio::parentdir(@file)
    fileio::chdir(@dir)
    
    # Record start time
    @start_time = time::ticks()
    
    # Import the script
    println "Importing and running ${@file}..."
    import @file
    
    # Record end time and calculate duration
    @end_time = time::ticks()
    @duration = time::ticksms(@end_time - @start_time)

    @xyz = "hello"
    
    # Store runtime information
    @runtimes << {"file": @file, "duration": @duration}
  end
end

# Summarize and print runtimes
@total_duration = 0
for @runtime in @runtimes do
  @file = @runtime["file"]
  @duration = @runtime["duration"]
  println "Script: ${@file} ran for ${@duration} ms."
  @total_duration += @duration
end

println "
Ran ${runtimes.size()} scripts.
Total runtime for all scripts: ${@total_duration} ms.
"