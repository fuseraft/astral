# Script Performance Analyzer

import "@kiwi/fileio"
import "@kiwi/time"

runtimes = []

# Search pattern for Kiwi scripts, excluding certain files and directories
search_pattern = "./**/*.ü•ù"
exclusions = ["install.ü•ù", "test.ü•ù", "/kiwilib/", "/examples/"]

println "Searching for Kiwi scripts..."
silent(true)

for file in fileio::glob(search_pattern) do
  exclude = false

  # Check if file is not in the exclusions list
  for exclude_pattern in exclusions do
    if file.contains(exclude_pattern)
      exclude = true
      break
    end
  end
  
  if !exclude
    fileio::chdir(fileio::parentdir(file))
    
    # Record start and end times.    
    start_time = time::ticks()
    import file
    end_time = time::ticks()
        
    # Store runtime information
    runtimes << {"file": file, "duration": time::ticksms(end_time - start_time)}
  end
end

silent(false)

# Summarize and print runtimes
total_duration = 0

for runtime in runtimes do
  println "${runtime["file"]} ran for ${runtime["duration"]} ms."

  total_duration += runtime["duration"]
end

println "
Ran ${runtimes.size()} scripts.
Total runtime for all scripts: ${total_duration} ms.
"