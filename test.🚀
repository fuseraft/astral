# Script Performance Analyzer

import "@astral/fs" as fs
import "@astral/time"

runtimes = []

# Search pattern for Astral scripts, excluding certain files and directories
search_pattern = "./**/*.ðŸš€"
exclusions = ["install.ðŸš€", "test.ðŸš€", "test.min.ðŸš€", "play.ðŸš€", "/pg/", "lib/astral", "/examples/"]

println("Searching for Astral scripts...")
silent(true)

for file in fs.glob(search_pattern) do
  exclude = false

  # Check if file is not in the exclusions list
  for exclude_pattern in exclusions do
    if file.contains(exclude_pattern)
      exclude = true
      break
    end
  end
  
  if !exclude
    fs.chdir(fs.parentdir(file))
    
    # Record start and end times.    
    start_time = time::ticks()
    import file
    end_time = time::ticks()
        
    # Store runtime information
    runtimes << {"file": file, "duration": time::ticksms(end_time - start_time)}
  end
end

silent(false)

# Summarize and print runtimes
total_duration = 0

for runtime in runtimes do
  println("${runtime["file"]} ran for ${runtime["duration"]} ms.")
  total_duration += runtime["duration"]
end

println("
Ran ${runtimes.size()} scripts.
Total runtime for all scripts: ${total_duration} ms.
")